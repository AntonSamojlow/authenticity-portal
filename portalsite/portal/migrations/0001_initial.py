# Generated by Django 3.2.9 on 2022-01-12 19:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('notes', models.TextField(blank=True, help_text='description or notes for this measurement', null=True)),
                ('time_measured', models.DateTimeField(help_text='time the data was measured')),
                ('time_created', models.DateTimeField(auto_now_add=True, help_text='fist time this measurement was saved to database')),
                ('time_changed', models.DateTimeField(auto_now=True, help_text='last time this measurement was changed')),
                ('data', models.TextField(help_text='file data, serialized to string in a suitable way')),
                ('data_handler', models.CharField(choices=[('NumericCsv', 'NumericCsv')], max_length=10)),
                ('groups', models.ManyToManyField(to='portal.Group')),
            ],
            options={
                'ordering': ['time_created'],
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('data', models.TextField(help_text='model data (weights, parameters, coefficients, etc.), serialized to string')),
                ('ready_for_prediction', models.BooleanField(default=False, help_text='whether this model is ready to be used for predictions')),
                ('model_type', models.CharField(choices=[('Test', 'TestModelType'), ('LinearRegr', 'Linear regression'), ('Simca', 'SimcaModel')], max_length=10)),
                ('time_created', models.DateTimeField(auto_now_add=True, help_text='fist time this measurement was saved to database')),
                ('time_changed', models.DateTimeField(auto_now=True, help_text='last time this measurement was changed')),
                ('groups', models.ManyToManyField(to='portal.Group')),
                ('user_changed', models.ForeignKey(help_text='user that last changed this model in the database', on_delete=django.db.models.deletion.RESTRICT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_created', models.ForeignKey(help_text='user that created this model in the database', on_delete=django.db.models.deletion.RESTRICT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['time_created'],
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(default=0)),
                ('time', models.DateTimeField(auto_now_add=True, help_text='time it was generated')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.measurement')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.model')),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(blank=True, null=True)),
                ('result', models.TextField()),
                ('time', models.DateTimeField(auto_now_add=True, help_text='time it was generated')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.measurement')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.model')),
            ],
        ),
        migrations.AddField(
            model_name='measurement',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='portal.source'),
        ),
        migrations.AddField(
            model_name='measurement',
            name='user_changed',
            field=models.ForeignKey(help_text='user that last changed this measurement in the database', on_delete=django.db.models.deletion.RESTRICT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='measurement',
            name='user_created',
            field=models.ForeignKey(help_text='user that created this measurement in the database', on_delete=django.db.models.deletion.RESTRICT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
    ]
